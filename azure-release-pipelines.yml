trigger: none

resources:
  pipelines:
  - pipeline: build
    source: 'demo-az-durable-function-trace - BUILD'
  
variables:
  vmImageName: 'vs2017-win2016'
  azureSubscription: 'Internal Demo Account (164a84cf-b099-4567-a527-c2a8143a32c7)'

stages:
 - stage: CI
   displayName: CI stage 
   variables:
     app-name: 'remote-monitor-topology-ci'
     storageAccountName: 'azfuncrmmisci'
     region: 'Central US'
     resourceGroupName: 'remote-monitor-ci'  
   jobs:
   - deployment: Deploy
     displayName: Deploy
     environment: 'CI'
     pool:
        vmImage: $(vmImageName)   
      
     strategy:
        runOnce:
          deploy:
  
            steps:
           
            - task: AzureResourceGroupDeployment@2
              displayName: '1. Create Function Infrastructure'
              inputs:
                azureSubscription: '$(azureSubscription)'
                resourceGroupName: '$(resourceGroupName)'
                location: '$(region)'
                csmFile: '$(Pipeline.Workspace)/build/Infrastructure/function-app-consumption.json'
                overrideParameters: '-appName $(app-name) -storageAccountName $(storageAccountName)'
                deploymentOutputs: ResourceGroupDeploymentOutputs

            - task: PowerShell@2
              displayName: '2. Capture Outputs'
              inputs:
                  targetType: 'inline'
                  script: |
                    Write-Output "processing  outputs"
                                  $outputs = ConvertFrom-Json $($env:ResourceGroupDeploymentOutputs)
                                  foreach ($output in $outputs.PSObject.Properties) {
                                    Write-Host "##vso[task.setvariable variable=Local_$($output.Name)]$($output.Value.value)"
                                  }

            - task: AzurePowerShell@4
              displayName: '3. Function - MeasurementInsightServiceKey in Key Vault'
              inputs:
                azureSubscription: '$(azureSubscription)'
                ScriptType: InlineScript
                Inline: |
                 $Secret = ConvertTo-SecureString -String $($env:Local_functionKey) -AsPlainText -Force
                 Set-AzKeyVaultSecret -VaultName 'remote-monitor-kv-ci' -Name 'MeasurementInsightServiceKey' -SecretValue $Secret
                
                azurePowerShellVersion: LatestVersion

            - task: AzurePowerShell@4
              displayName: '4. Function - Give Identity Access to KeyVault'
              inputs:
                azureSubscription: '$(azureSubscription)'
                ScriptType: InlineScript
                Inline: |
                  Set-AzKeyVaultAccessPolicy -VaultName remote-monitor-kv-ci -ObjectId $(Local_miObjectId) -PermissionsToKeys get,list -PermissionsToSecrets get,list -BypassObjectIdValidation
                   
                azurePowerShellVersion: LatestVersion

            - task: AzureFunctionApp@1
              displayName: '5. Azure functions app deploy'
              inputs:
                azureSubscription: '$(azureSubscription)'
                appType: functionApp
                appName: $(app-name)
                package: '$(Pipeline.Workspace)/build/App/RemoteMonitor.Services.Insights.zip'
                AppSettings: '-CosmosDBConnection @Microsoft.KeyVault(VaultName=remote-monitor-kv-ci;SecretName=CosmosDBConnectionString;SecretVersion=)'